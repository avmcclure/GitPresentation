[alias]
# List all aliases
  la = "!git config -l | grep alias | cut -c 7-"
  co = checkout
  st = status
# Set me back to the tip of master
  fk = !git fetch origin && git reset --hard origin/master
# Let me change the previous commit
  amend = commit -a --amend
# Log on file level
  filelog = log -u
# Short name for previous alias
  fl = log -u
# Log with no colors
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
# Logs with colors and date as 1 hour ago
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
# Logs with colors and normal dates
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
# Log commit with each file changed and +/- for it
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
# Log graph
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
# Find a file in subdirs
  f = "!git ls-files | grep -i"
# Also Find a file in subdirs
  find = "!git ls-files | grep -i"
# Find a file from the top level
  gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
# Delete branch
  bd = push origin --delete
  jim = push origin --delete
# Delete all merged branches
  bdm = "!git branch --merged | grep -v '*' | xargs -n 1 git branch -d"
# Add unmerged files to staging
  add-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; git add `f`"
# Edit all unmerged files
  edit-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; code `f`"
